)
return(vital_infor)
})
#convert list to data frame
#vital_infor is hasn't simplify vital information
vital_infor <- do.call(rbind,vital_infor)
#Simplify=F
if(simplify==F){
return(vital_infor)
}
#Simplify the output for survival analysis
vital_data <- apply(vital_infor,1,function(x){
#binding
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,4,6,7)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[1:3]
return(x)
})
vital_data <- as.data.frame(t(vital_data))
#add a colum days_to_new_tumor_event
vital_data <- cbind(vital_data,vital_infor$followupInfor_days_to_new_tumor_event)
colnames(vital_data)[4] <- "followupInfor_days_to_new_tumor_event"
#Simplify=TRUE
return(vital_data)
}
vitalParse <- function(list,simplify=TRUE){
if(!all(grepl(".xml",list) == TRUE)){
stop("list must be a vector of TCGA XML file names")}
#extract the TCGA xml files one by one
vital_infor <- lapply(list,
function(filenames){
file <- XML::xmlParse(filenames,encoding="UTF-8")
file <- XML::xmlToList(file)
patient <- file[[2]]
rm(file)
#check NA function
checkNA <- function(x){
out_put <- tryCatch(x,error=function(c){NA})
out_put <- ifelse(is.null(out_put),NA,out_put)
return(out_put)
}
vital_infor <- data.frame(bcr_patient_barcode = checkNA(patient[["bcr_patient_barcode"]][["text"]]),
vital_status = checkNA(patient[["vital_status"]][["text"]]),
days_to_death = checkNA(patient[["days_to_death"]][["text"]]),
days_to_new_tumor_event=checkNA(patient[["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
days_to_last_followup = checkNA(patient[["days_to_last_followup"]][["text"]]),
followupInfor_days_to_new_tumor_event=checkNA(patient[["follow_ups"]][["follow_up"]][["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
followupInfor_vital_status = checkNA(patient[["follow_ups"]][["follow_up"]][["vital_status"]][["text"]]),
followupInfor_days_to_last_followup = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_last_followup"]][["text"]]),
followupInfor_days_to_death = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_death"]][["text"]])
)
return(vital_infor)
})
#convert list to data frame
#vital_infor is hasn't simplify vital information
vital_infor <- do.call(rbind,vital_infor)
#Simplify=F
if(simplify==F){
return(vital_infor)
}
#Simplify the output for survival analysis
vital_data <- apply(vital_infor,1,function(x){
#binding
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,4,6,7)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[1:3]
return(x)
})
vital_data <- as.data.frame(t(vital_data))
#add a colum days_to_new_tumor_event
vital_data <- cbind(vital_data,vital_infor$followupInfor_days_to_new_tumor_event)
colnames(vital_data)[4] <- "followupInfor_days_to_new_tumor_event"
#Simplify=TRUE
return(vital_data)
}
tou <- vitalParse(filenames[7],simplify=F)
View(tou)
tou <- vitalParse(filenames[1:7],simplify=F)
x <- tou
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
View(x)
x <- tou[1,]
#binding
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
View(x)
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
x <- x[c(1,2,4,6,7)]
x <- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,4,5,7,8)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[1:4]
vitalParse <- function(list,simplify=TRUE){
if(!all(grepl(".xml",list) == TRUE)){
stop("list must be a vector of TCGA XML file names")}
#extract the TCGA xml files one by one
vital_infor <- lapply(list,
function(filenames){
file <- XML::xmlParse(filenames,encoding="UTF-8")
file <- XML::xmlToList(file)
patient <- file[[2]]
rm(file)
#check NA function
checkNA <- function(x){
out_put <- tryCatch(x,error=function(c){NA})
out_put <- ifelse(is.null(out_put),NA,out_put)
return(out_put)
}
vital_infor <- data.frame(bcr_patient_barcode = checkNA(patient[["bcr_patient_barcode"]][["text"]]),
vital_status = checkNA(patient[["vital_status"]][["text"]]),
days_to_death = checkNA(patient[["days_to_death"]][["text"]]),
days_to_new_tumor_event=checkNA(patient[["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
days_to_last_followup = checkNA(patient[["days_to_last_followup"]][["text"]]),
followupInfor_days_to_new_tumor_event=checkNA(patient[["follow_ups"]][["follow_up"]][["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
followupInfor_vital_status = checkNA(patient[["follow_ups"]][["follow_up"]][["vital_status"]][["text"]]),
followupInfor_days_to_last_followup = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_last_followup"]][["text"]]),
followupInfor_days_to_death = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_death"]][["text"]])
)
return(vital_infor)
})
#convert list to data frame
#vital_infor is hasn't simplify vital information
vital_infor <- do.call(rbind,vital_infor)
#Simplify=F
if(simplify==F){
return(vital_infor)
}
#Simplify the output for survival analysis
vital_data <- apply(vital_infor,1,function(x){
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,4,5,7,8)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[1:4]
return(x)
})
vital_data <- as.data.frame(t(vital_data))
#Simplify=TRUE
return(vital_data)
}
tou1 <- vitalParse(filenames,simplify=T)
tou1 <- vitalParse(filenames[1:7],simplify=T)
tou1
x <- c(x,tumor_event_status)
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
x <- c(x,tumor_event_status)
x<- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,4,5,7,8)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x<- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,4,5,7,8)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[1:4]
x<- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
View(x)
x <- x[c(1,2,4,5,7,8)]
View(x)
x<- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,5,7,8,4)]
View(x)
x <- x[c(1:3,6)]
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
x <- c(x,tumor_event_status=tumor_event_status)
vitalParse <- function(list,simplify=TRUE){
if(!all(grepl(".xml",list) == TRUE)){
stop("list must be a vector of TCGA XML file names")}
#extract the TCGA xml files one by one
vital_infor <- lapply(list,
function(filenames){
file <- XML::xmlParse(filenames,encoding="UTF-8")
file <- XML::xmlToList(file)
patient <- file[[2]]
rm(file)
#check NA function
checkNA <- function(x){
out_put <- tryCatch(x,error=function(c){NA})
out_put <- ifelse(is.null(out_put),NA,out_put)
return(out_put)
}
vital_infor <- data.frame(bcr_patient_barcode = checkNA(patient[["bcr_patient_barcode"]][["text"]]),
vital_status = checkNA(patient[["vital_status"]][["text"]]),
days_to_death = checkNA(patient[["days_to_death"]][["text"]]),
days_to_new_tumor_event=checkNA(patient[["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
days_to_last_followup = checkNA(patient[["days_to_last_followup"]][["text"]]),
followupInfor_days_to_new_tumor_event=checkNA(patient[["follow_ups"]][["follow_up"]][["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
followupInfor_vital_status = checkNA(patient[["follow_ups"]][["follow_up"]][["vital_status"]][["text"]]),
followupInfor_days_to_last_followup = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_last_followup"]][["text"]]),
followupInfor_days_to_death = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_death"]][["text"]])
)
return(vital_infor)
})
#convert list to data frame
#vital_infor is hasn't simplify vital information
vital_infor <- do.call(rbind,vital_infor)
#Simplify=F
if(simplify==F){
return(vital_infor)
}
#Simplify the output for survival analysis
vital_data <- apply(vital_infor,1,function(x){
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,5,7,8,4)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[c(1:3,6)]
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
x <- c(x,tumor_event_status=tumor_event_status)
return(x)
})
vital_data <- as.data.frame(t(vital_data))
#Simplify=TRUE
return(vital_data)
}
tou <- vitalParse(filenames[1:7],simplify=F)
tou1 <- vitalParse(filenames[1:7],simplify=T)
tou1
x <- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,5,7,8,4)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[c(1:3,6)]
View(x)
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
x <- c(x,tumor_event_status=tumor_event_status)
tou1
x <- x[-5]
x <- c(x,tumor_event_status)
vitalParse <- function(list,simplify=TRUE){
if(!all(grepl(".xml",list) == TRUE)){
stop("list must be a vector of TCGA XML file names")}
#extract the TCGA xml files one by one
vital_infor <- lapply(list,
function(filenames){
file <- XML::xmlParse(filenames,encoding="UTF-8")
file <- XML::xmlToList(file)
patient <- file[[2]]
rm(file)
#check NA function
checkNA <- function(x){
out_put <- tryCatch(x,error=function(c){NA})
out_put <- ifelse(is.null(out_put),NA,out_put)
return(out_put)
}
vital_infor <- data.frame(bcr_patient_barcode = checkNA(patient[["bcr_patient_barcode"]][["text"]]),
vital_status = checkNA(patient[["vital_status"]][["text"]]),
days_to_death = checkNA(patient[["days_to_death"]][["text"]]),
days_to_new_tumor_event=checkNA(patient[["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
days_to_last_followup = checkNA(patient[["days_to_last_followup"]][["text"]]),
followupInfor_days_to_new_tumor_event=checkNA(patient[["follow_ups"]][["follow_up"]][["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
followupInfor_vital_status = checkNA(patient[["follow_ups"]][["follow_up"]][["vital_status"]][["text"]]),
followupInfor_days_to_last_followup = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_last_followup"]][["text"]]),
followupInfor_days_to_death = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_death"]][["text"]])
)
return(vital_infor)
})
#convert list to data frame
#vital_infor is hasn't simplify vital information
vital_infor <- do.call(rbind,vital_infor)
#Simplify=F
if(simplify==F){
return(vital_infor)
}
#Simplify the output for survival analysis
vital_data <- apply(vital_infor,1,function(x){
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,5,7,8,4)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[c(1:3,6)]
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
x <- c(x,tumor_event_status)
names(x)[5] <- "tumor_event_status"
return(x)
})
vital_data <- as.data.frame(t(vital_data))
#Simplify=TRUE
return(vital_data)
}
tou1 <- vitalParse(filenames[1:7],simplify=T)
tou1
tumor_event_free_days <- ifelse(is.na(x["days_to_new_tumor_event"]),x["days_to_last_followup"],x["days_to_new_tumor_event"])
x<- tou[1,]
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,5,7,8,4)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[c(1:3,6)]
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
tumor_event_free_days <- ifelse(is.na(x["days_to_new_tumor_event"]),x["days_to_last_followup"],x["days_to_new_tumor_event"])
View(x)
x <- c(x,tumor_event_status,tumor_event_free_days)
names(x)[5:6] <- c("tumor_event_status","tumor_event_free_days")
vitalParse <- function(list,simplify=TRUE){
if(!all(grepl(".xml",list) == TRUE)){
stop("list must be a vector of TCGA XML file names")}
#extract the TCGA xml files one by one
vital_infor <- lapply(list,
function(filenames){
file <- XML::xmlParse(filenames,encoding="UTF-8")
file <- XML::xmlToList(file)
patient <- file[[2]]
rm(file)
#check NA function
checkNA <- function(x){
out_put <- tryCatch(x,error=function(c){NA})
out_put <- ifelse(is.null(out_put),NA,out_put)
return(out_put)
}
vital_infor <- data.frame(bcr_patient_barcode = checkNA(patient[["bcr_patient_barcode"]][["text"]]),
vital_status = checkNA(patient[["vital_status"]][["text"]]),
days_to_death = checkNA(patient[["days_to_death"]][["text"]]),
days_to_new_tumor_event=checkNA(patient[["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
days_to_last_followup = checkNA(patient[["days_to_last_followup"]][["text"]]),
followupInfor_days_to_new_tumor_event=checkNA(patient[["follow_ups"]][["follow_up"]][["new_tumor_events"]][["new_tumor_event"]][["days_to_new_tumor_event_after_initial_treatment"]][["text"]]),
followupInfor_vital_status = checkNA(patient[["follow_ups"]][["follow_up"]][["vital_status"]][["text"]]),
followupInfor_days_to_last_followup = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_last_followup"]][["text"]]),
followupInfor_days_to_death = checkNA(patient[["follow_ups"]][["follow_up"]][["days_to_death"]][["text"]])
)
return(vital_infor)
})
#convert list to data frame
#vital_infor is hasn't simplify vital information
vital_infor <- do.call(rbind,vital_infor)
#Simplify=F
if(simplify==F){
return(vital_infor)
}
#Simplify the output for survival analysis
vital_data <- apply(vital_infor,1,function(x){
#binding
if( !is.na(x["followupInfor_days_to_new_tumor_event"])  ){
x["days_to_new_tumor_event"] <- x["followupInfor_days_to_new_tumor_event"]
}
if( !is.na(x["days_to_death"]) ){
x["days_to_last_followup"] <- x["days_to_death"]
}
if( !is.na(x["followupInfor_days_to_death"]) ){
x["followupInfor_days_to_last_followup"] <- x["followupInfor_days_to_death"]
}
x <- x[c(1,2,5,7,8,4)]
if( !is.na(x["followupInfor_days_to_last_followup"]) ){
x["vital_status"] <- x["followupInfor_vital_status"]
x["days_to_last_followup"] <- x["followupInfor_days_to_last_followup"]
}
x <- x[c(1:3,6)]
tumor_event_status <- ifelse(is.na(x["days_to_new_tumor_event"]),"none","occur")
tumor_event_free_days <- ifelse(is.na(x["days_to_new_tumor_event"]),x["days_to_last_followup"],x["days_to_new_tumor_event"])
x <- c(x,tumor_event_status,tumor_event_free_days)
names(x)[5:6] <- c("tumor_event_status","tumor_event_free_days")
return(x)
})
vital_data <- as.data.frame(t(vital_data))
#Simplify=TRUE
return(vital_data)
}
tou1 <- vitalParse(filenames[1:7],simplify=T)
tou1
filenames <- list.files("../test/")
filenames
file <- XML::xmlParse(filenames[1],encoding="UTF-8")
file <- XML::xmlToList(file)
patient <- file[[2]]
rm(file)
drug <- patient
rm(patient)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
